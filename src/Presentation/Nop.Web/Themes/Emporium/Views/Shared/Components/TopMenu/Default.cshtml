@using Nop.Web.Models.Catalog

@model TopMenuModel

@{
    var isRtl = await this.ShouldUseRtlThemeAsync();
}

<input type="hidden" value="@isRtl.ToString().ToLowerInvariant()" id="isRtlEnabled" />

<ul class="top-menu">
    @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.HeaderMenuBefore })
    @{
        var rootCategories = Model.Categories.Where(x => x.IncludeInTopMenu).ToList();
    }
    <li class="all-categories">
        <span>@T("SevenSpikes.Themes.Emporium.Header.AllCategories")</span>
        <div class="plus-button"></div>
        <div class="sublist-wrap">
            <ul class="sublist">
                <li class="back-button">
                    <span>@T("SevenSpikes.Themes.Common.BackSublist")</span>
                </li>
                @foreach (var category in rootCategories)
                {
                    var categoryLineModel = new TopMenuModel.CategoryLineModel
                    {
                        Category = category
                    };
                    @await Html.PartialAsync("_CategoryLine.TopMenu", categoryLineModel)
                }
            </ul>
        </div>
    </li>

        <li><a href="@Url.RouteUrl("Category", new { SeName = T("Custom.Sales") })">@T("Custom.Sales")</a></li>
        <li><a href="@Url.RouteUrl("InStock")?orderby=10">@T("Custom.InStockItems")</a></li>
        <li><a href="@Url.RouteUrl("Topic", new { SeName = await Html.GetTopicSeNameAsync("howtoorder")})">@T("Custom.HowToOrder")</a></li>
        <li><a href="@Url.RouteUrl("Topic",  new { SeName = await Html.GetTopicSeNameAsync("shippinginfo")})">@T("Custom.ShippingInfo")</a></li>
        <li><a href="@Url.RouteUrl("Boards")">@T("Forum.Forums")</a></li>
		<li><a href="@Url.RouteUrl("Topic",  new { SeName = await Html.GetTopicSeNameAsync("aboutus")})">@T("AboutUs")</a></li>

<li>@await Component.InvokeAsync("LanguageSelector")</li>
    @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.HeaderMenuAfter })
</ul>

